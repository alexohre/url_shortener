<%= content_for :og_meta_tags do %>
	<meta property="og:title" content="<%= @og_data[:title] %>">
	<meta property="og:description" content="<%= @og_data[:description] %>">
	<meta property="og:image" content="<%= @og_data[:image] %>">
	<meta property="og:url" content="<%= @url.long_url %>">
<% end %>
<style>
	.disabled {
	  pointer-events: none;
	  opacity: 0.6;
	}
	.countdown-container {
	  text-align: center;
	  margin: 20px auto;
	  position: relative;
	  width: 150px;
	  height: 150px;
	}
	.countdown-ring {
	  transform: rotate(-90deg);
	  transform-origin: 50% 50%;
	}
	.countdown-circle {
	  fill: none;
	  stroke-width: 10;
	}
	.countdown-circle-bg {
	  stroke: #f0f0f0;
	}
	.countdown-circle-progress {
	  stroke: #0d6efd;
	  stroke-linecap: round;
	  transition: stroke-dashoffset 1s linear;
	}
	.countdown-number {
	  position: absolute;
	  top: 50%;
	  left: 50%;
	  transform: translate(-50%, -50%);
	  font-size: 2.5rem;
	  font-weight: bold;
	  color: #0d6efd;
	}
</style>
<div class="container mt-5">
	<!-- Advertisement Cards -->
	<div class="row mb-4 mt-4">
		<div class="col-lg-10 mx-auto">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Advertisement</h5>
					<p class="card-text">This is an advertisement space.</p>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-lg-10 mx-auto">
			<div class="card shadow-sm">
				<div class="card-body">
					<h4 class="card-title text-center mb-4"><%= @og_data[:title] %></h4>
					<p class="card-text text-muted text-center"><%= @og_data[:description] %></p>
					<div class="countdown-container">
						<svg class="countdown-ring" width="150" height="150">
							<circle class="countdown-circle countdown-circle-bg" cx="75" cy="75" r="60"/>
							<circle class="countdown-circle countdown-circle-progress" cx="75" cy="75" r="60"
									stroke-dasharray="377" stroke-dashoffset="0"/>
						</svg>
						<div id="countdown" class="countdown-number">5</div>
					</div>
					<div class="text-center mt-3">
						<p class="text-muted mb-2">Redirecting to:</p>
						<a href="<%= @url.long_url %>" class="text-break"><%= @url.long_url %></a>
						<div class="mt-3">
							<button type="button" id="skipBtn" class="btn btn-primary disabled" onclick="skipAds()">
								Skip (<span id="skip-timer">5</span>)
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row mb-4">
		<div class="col-lg-10 mx-auto">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Featured Content</h5>
					<p class="card-text">This is a featured content space.</p>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-lg-10 mx-auto">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Recommended</h5>
					<p class="card-text">This is a recommended content space.</p>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	const COUNTDOWN_TIME = 10;
	let timeLeft = COUNTDOWN_TIME;
	const countdownEl = document.getElementById('countdown');
	const skipTimer = document.getElementById('skip-timer');
	const skipBtn = document.getElementById('skipBtn');
	const progressCircle = document.querySelector('.countdown-circle-progress');
	const circumference = 2 * Math.PI * 60; // 2Ï€r where r=60

	progressCircle.style.strokeDasharray = circumference;

	function updateCountdown() {
		countdownEl.textContent = timeLeft;
		skipTimer.textContent = timeLeft;

		const progress = (timeLeft / COUNTDOWN_TIME);
		const offset = circumference * (1 - progress);
		progressCircle.style.strokeDashoffset = offset;

		if (timeLeft <= 0) {
			window.location.href = '<%= @url.long_url %>';
			return;
		}

		if (timeLeft <= 3) {
			skipBtn.classList.remove('disabled');
		}

		timeLeft--;
		setTimeout(updateCountdown, 1000);
	}

	function skipAds() {
		window.location.href = '<%= @url.long_url %>';
	}

	// Start the countdown
	updateCountdown();
</script>